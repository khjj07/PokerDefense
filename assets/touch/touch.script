local CAMSIZE=vmath.vector3(720,1280,0)
local UI={ingame="/ingame/ingame"}
local rendercam = require "rendercam.rendercam"
function init(self)
	msg.post(".", "acquire_input_focus")
	self.unit = nil
	self.touch=false
	self.item_picked=false
end
function update(self, dt)
	if self.touch and self.unit then
		go.set_position(go.get_position()+vmath.vector3(0,0,0.5),self.unit)
	end
end

function on_input(self, action_id, action)
	if not action_id then
		local pos = rendercam.screen_to_world_2d(action.screen_x, action.screen_y)
		go.cancel_animations(".", "position")
		go.set_position(pos)
	end
	if action_id==hash("touch") then
		if action.pressed and self.unit then
			self.touch=true
			msg.post(self.unit, "pick")
		elseif action.released and self.unit and self.touch then
			msg.post(self.unit, "drop")
			self.touch=false
		elseif self.unit then
			msg.post(self.unit, "hover",{item = self.item_picked})
		end
	end
end
function on_message(self, message_id, message, sender)
	if message_id==hash("trigger_response") then
		if not self.unit and message.enter then
			self.unit = message.other_id
		elseif not message.enter and self.unit==message.other_id then
			self.unit = nil
		end
		msg.post(UI.ingame, "target",{target=self.unit})
	end
	if message_id==hash("merge") then
		self.unit=nil
		msg.post(UI.ingame, "target",{target=self.unit})
	end
	if message_id==hash("item_picked") then
		self.item_picked=true
	end
	if message_id==hash("item_droped") then
		self.item_picked=false
	end
end